{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.message.destinationUserId = $event),\n    placeholder: \"destinationUserID\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.message.destinationUserId]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.message.destinationRegistrationId = $event),\n    placeholder: \"destinationRegistrationID\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.message.destinationRegistrationId]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.message.groupId = $event),\n    placeholder: \"groupId\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.message.groupId]]), _createTextVNode(\"; \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.message.myMsg = $event),\n    placeholder: \"myMsg\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.message.myMsg]]), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.send && $options.send(...args))\n  }, \"Send\"), _createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.get && $options.get(...args))\n  }, \"GetKeys\"), _createElementVNode(\"div\", null, _toDisplayString($data.recvMsg), 1 /* TEXT */), _createElementVNode(\"div\", null, _toDisplayString($data.msg), 1 /* TEXT */), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[6] || (_cache[6] = (...args) => $options.onStore && $options.onStore(...args))\n  }, \"Store\"), _createElementVNode(\"button\", {\n    onClick: _cache[7] || (_cache[7] = (...args) => $options.onCheck && $options.onCheck(...args))\n  }, \"Check\"), _createElementVNode(\"button\", {\n    onClick: _cache[8] || (_cache[8] = (...args) => $options.onDelete && $options.onDelete(...args))\n  }, \"Delete\")])]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","type","$data","message","destinationUserId","$event","placeholder","destinationRegistrationId","groupId","myMsg","onClick","_cache","args","$options","send","get","_toDisplayString","recvMsg","msg","onStore","onCheck","onDelete"],"sources":["D:\\E2EE\\demo777\\newVision\\E2EE_Project\\front\\E2EE\\src\\components\\ChatPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <input type=\"text\" v-model=\"message.destinationUserId\" placeholder=\"destinationUserID\">\r\n    <input type=\"text\" v-model=\"message.destinationRegistrationId\" placeholder=\"destinationRegistrationID\">\r\n    <input type=\"text\" v-model=\"message.groupId\" placeholder=\"groupId\">;\r\n    <input type=\"text\" v-model=\"message.myMsg\" placeholder=\"myMsg\">\r\n    <button v-on:click=\"send\">Send</button>\r\n    <button v-on:click=\"get\">GetKeys</button>\r\n    <div>{{ recvMsg }}</div>\r\n    <div>{{ msg }}</div>\r\n    <div>\r\n      <button v-on:click=\"onStore\">Store</button>\r\n      <button v-on:click=\"onCheck\">Check</button>\r\n      <button v-on:click=\"onDelete\">Delete</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {useStore} from 'vuex'\r\nimport router from \"@/router\"; // 引入useStore 方法\r\nexport default {\r\n  setup() {\r\n    const store = useStore()  // 该方法用于返回store 实例\r\n    console.log(store)  // store 实例对象\r\n    return {store}\r\n  },\r\n  name: \"ChatPage\",\r\n  created() {\r\n    console.log('created')\r\n    this.initWebSocket()\r\n  },\r\n  destroyed() {\r\n    //销毁\r\n    this.websocketClose();\r\n  },\r\n  data() {\r\n    return {\r\n      message: {\r\n        groupId: -1,\r\n        destinationUserId: '',\r\n        destinationRegistrationId: '',\r\n        myMsg: '',\r\n      },\r\n      websocket: null,\r\n      recvMsg: {},\r\n      msg: '',\r\n    }\r\n  },\r\n  methods: {\r\n    send() {\r\n      console.log('send')\r\n\r\n      if (this.message.groupId !== -1) {\r\n        this.$http.post('/groupOrIndividual', {\r\n          groupId: this.message.groupId\r\n        }).then(async e => {\r\n          for (const key in e.data){\r\n            // alert(key+' '+e.data[key])\r\n            let getBundleResult = await this.store.dispatch('get-key-bundle-of', key);\r\n            if(getBundleResult){\r\n              this.message.destinationUserId = key;\r\n              this.message.destinationRegistrationId = e.data[key];\r\n              this.message.groupId=-1;\r\n              let cipherText = await this.store.dispatch('encrypt-message', this.message);\r\n              await this.websocketSend(JSON.stringify(cipherText));\r\n            }\r\n            // this.store.dispatch('get-key-bundle-of', key)\r\n            //     .then(result => {\r\n            //         if(result){\r\n            //             this.message.destinationUserId = key;\r\n            //             this.message.destinationRegistrationId = e.data[key];\r\n            //             this.message.groupId=-1\r\n            //             this.store.dispatch('encrypt-message', this.message)\r\n            //                 .then(res => {\r\n            //                     alert('send'+res)\r\n            //                     this.websocketSend(JSON.stringify(res));\r\n            //                 });\r\n            //         }\r\n            //     });\r\n          }\r\n        })\r\n\r\n      } else {\r\n        alert('not group')\r\n        alert(JSON.stringify(this.message))\r\n        this.store.dispatch('encrypt-message', this.message)\r\n            .then(res => {\r\n              this.websocketSend(JSON.stringify(res));\r\n            });\r\n      }\r\n\r\n\r\n    },\r\n    get() {\r\n      this.$http.get('/keyOf/' + this.message.destinationUserId)\r\n          .then(response => {\r\n            console.log((response));\r\n            this.recvMsg = response.data;\r\n            this.store.dispatch('process-key', response.data)\r\n                .then(res => {\r\n                  if (res === true) {\r\n                    console.log(\"ok\");\r\n                    return 'ok';\r\n                  }\r\n                });\r\n          })\r\n\r\n    },\r\n    // onConfirm() {\r\n    //   //需要传输的数据\r\n    //   let data = {\r\n    //     code: 1,\r\n    //     item: '传输数据'\r\n    //   }\r\n    //   this.websocketSend(JSON.stringify(data))\r\n    // },\r\n    initWebSocket() { // 初始化websocket\r\n      let url = 'ws://localhost:9090/websocket/' + this.store.getters.getUserId;\r\n      alert(url)\r\n      this.websock = new WebSocket(url);\r\n      this.websock.onmessage = this.websocketOnMessage\r\n      this.websock.onerror = this.websocketOnError\r\n      // this.websock.onopen = this.websocketOnOpen\r\n      this.websock.onclose = this.websocketClose\r\n    },\r\n    // websocketOnOpen() { // 连接建立之后执行send方法发送数据\r\n    //   let data = {\r\n    //     code: 0,\r\n    //     msg: {\r\n    //       userId: this.store.getters.getUserId,\r\n    //       registrationId: this.store.getters.getRegistrationId,\r\n    //     }\r\n    //   }\r\n    //   // alert('post' + JSON.stringify(data))\r\n    //   // this.websocketSend(JSON.stringify(data))\r\n    // },\r\n    websocketOnError() {\r\n      console.log('WebSocket连接失败')\r\n    },\r\n    websocketOnMessage(e) { // 数据接收\r\n      alert('receive' + JSON.parse(e.data))\r\n      // console.log(e);\r\n      // console.log('数据接收' + e.data)\r\n      let newMsg = JSON.parse(e.data);\r\n      alert(newMsg)\r\n      console.log(newMsg);\r\n      let decrypted;\r\n      console.log(\"prepare to decrypt\")\r\n      // this.store.dispatch('check-info')\r\n      this.store.dispatch('decrypt-message', newMsg)\r\n          .then(res => {\r\n            console.log(res);\r\n            decrypted = res;\r\n            this.msg = res;\r\n          });\r\n      // console.log(decrypted);\r\n      // alert('你有新消息'+ decrypted);\r\n    },\r\n    websocketSend(Data) { // 数据发送\r\n      this.websock.send(Data)\r\n      alert('send' + Data)\r\n\r\n    },\r\n    websocketClose(e) {  // 关闭\r\n      console.log('已关闭连接', e)\r\n    },\r\n    onStore() {\r\n      this.store.dispatch('store-info')\r\n          .then(resCode => {\r\n            console.log(resCode);\r\n          });\r\n    },\r\n    onCheck() {\r\n      this.store.dispatch('check-info', this.message.destinationUserId)\r\n          .then(resObj => {\r\n            console.log(resObj);\r\n          });\r\n    },\r\n    onDelete() {\r\n      this.store.dispatch('delete-info', this.message.destinationUserId)\r\n          .then(res => {\r\n            console.log(res);\r\n          })\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":";;uBACEA,mBAAA,CAcM,c,gBAbJC,mBAAA,CAAuF;IAAhFC,IAAI,EAAC,MAAM;+DAAUC,KAAA,CAAAC,OAAO,CAACC,iBAAiB,GAAAC,MAAA;IAAEC,WAAW,EAAC;iDAAvCJ,KAAA,CAAAC,OAAO,CAACC,iBAAiB,E,mBACrDJ,mBAAA,CAAuG;IAAhGC,IAAI,EAAC,MAAM;+DAAUC,KAAA,CAAAC,OAAO,CAACI,yBAAyB,GAAAF,MAAA;IAAEC,WAAW,EAAC;iDAA/CJ,KAAA,CAAAC,OAAO,CAACI,yBAAyB,E,mBAC7DP,mBAAA,CAAmE;IAA5DC,IAAI,EAAC,MAAM;+DAAUC,KAAA,CAAAC,OAAO,CAACK,OAAO,GAAAH,MAAA;IAAEC,WAAW,EAAC;iDAA7BJ,KAAA,CAAAC,OAAO,CAACK,OAAO,E,oBAAwB,IACnE,G,gBAAAR,mBAAA,CAA+D;IAAxDC,IAAI,EAAC,MAAM;+DAAUC,KAAA,CAAAC,OAAO,CAACM,KAAK,GAAAJ,MAAA;IAAEC,WAAW,EAAC;iDAA3BJ,KAAA,CAAAC,OAAO,CAACM,KAAK,E,GACzCT,mBAAA,CAAuC;IAA1BU,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,IAAA,IAAAD,QAAA,CAAAC,IAAA,IAAAF,IAAA,CAAI;KAAE,MAAI,GAC9BZ,mBAAA,CAAyC;IAA5BU,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAE,GAAA,IAAAF,QAAA,CAAAE,GAAA,IAAAH,IAAA,CAAG;KAAE,SAAO,GAChCZ,mBAAA,CAAwB,aAAAgB,gBAAA,CAAhBd,KAAA,CAAAe,OAAO,kBACfjB,mBAAA,CAAoB,aAAAgB,gBAAA,CAAZd,KAAA,CAAAgB,GAAG,kBACXlB,mBAAA,CAIM,cAHJA,mBAAA,CAA2C;IAA9BU,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAM,OAAA,IAAAN,QAAA,CAAAM,OAAA,IAAAP,IAAA,CAAO;KAAE,OAAK,GAClCZ,mBAAA,CAA2C;IAA9BU,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAO,OAAA,IAAAP,QAAA,CAAAO,OAAA,IAAAR,IAAA,CAAO;KAAE,OAAK,GAClCZ,mBAAA,CAA6C;IAAhCU,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAQ,QAAA,IAAAR,QAAA,CAAAQ,QAAA,IAAAT,IAAA,CAAQ;KAAE,QAAM,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}